name: Deploy to Ubuntu Server

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_DIR: ${{ secrets.APP_DIR }}
      DB_SERVICE: ${{ secrets.DB_SERVICE }}
      DB_URL: ${{ secrets.DB_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -Eeuo pipefail
            cd "${APP_DIR}"

            export PATH="$HOME/.bun/bin:$PATH"

            git fetch origin master
            git reset --hard origin/master

            bun install

            sudo docker compose -f docker-compose.prod.yml up -d

            echo "Waiting for PostgreSQL..."
            max_attempts=30
            attempt=1
            until sudo docker compose -f docker-compose.prod.yml exec -T "${DB_SERVICE}" pg_isready >/dev/null 2>&1 || [ $attempt -gt $max_attempts ]; do
              echo "Waiting... ($attempt/$max_attempts)"
              sleep 5
              attempt=$((attempt + 1))
            done

            cd packages/backend
            export DATABASE_URL="${DB_URL}"
            bun prisma generate
            bun prisma migrate deploy
            cd ../..

            cd packages/frontend && bun run build
            cd ../backend && bun run build
            cd ../worker && bun run build
            cd ../..

            if ! command -v pm2 &>/dev/null; then
              sudo npm i -g pm2
            fi

            pm2 delete all || true
            pm2 start ecosystem.config.js --update-env
            pm2 status
            echo "âœ… Deployment done."
