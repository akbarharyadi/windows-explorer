services:
  postgres:
    image: postgres:16-alpine
    container_name: window-explorer-postgres-prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - window-explorer-network

  redis:
    image: redis:7-alpine
    container_name: window-explorer-redis-prod
    restart: always
    volumes:
      - redis_prod_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - window-explorer-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: window-explorer-rabbitmq-prod
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-window-explorer}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-window-explorer_password}
    volumes:
      - rabbitmq_prod_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - window-explorer-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local
  rabbitmq_prod_data:
    driver: local

networks:
  window-explorer-network:
    driver: bridge
